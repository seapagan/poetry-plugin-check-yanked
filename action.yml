name: "Poetry Check Yanked"
description: "A GitHub Action for checking yanked packages using poetry-plugin-check-yanked."
author: "Your Name"

inputs:
  path:
    description: "The path to the project"
    required: false
    default: "."
  python-version:
    description: "The Python version to use"
    required: false
    default: "3.x"

runs:
  using: "composite"
  steps:
    - name: Check project and Python
      id: check_env
      run: |
        if [ -d ".git" ]; then
          echo "project_checked_out=true" >> $GITHUB_ENV
        else
          echo "project_checked_out=false" >> $GITHUB_ENV
        fi

        python_path=$(which python)
        if [[ "$python_path" == "/opt/hostedtoolcache/Python/"* ]]; then
          echo "python_installed_by_setup=true" >> $GITHUB_ENV
        else
          echo "python_installed_by_setup=false" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Checkout repository
      if: ${{ env.project_checked_out == 'false' }}
      uses: actions/checkout@v4

    - name: Set up Python
      if: ${{ env.python_installed_by_setup == 'false' }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: "latest"
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Install poetry-plugin-check-yanked
      run: poetry self add poetry-plugin-check-yanked
      shell: bash

    - name: Run poetry check-yanked
      run: poetry check-yanked --full
      shell: bash
      working-directory: ${{ inputs.path }}
